    class Solution {
        public List<List<Integer>> threeSum(int[] nums) {
            Arrays.sort(nums);//先将数组排序
            List<List<Integer>> result = new ArrayList<>();
            List<Integer> temp;
            int len = nums.length;
            if (len < 3) return result;
            for (int i = 0; i < len - 2; i++) {
                if (i == 0 || nums[i] != nums[i - 1]) {
                    for (int j = i + 1, k = len - 1; j < len - 1 && k > j; j++) {
                        if (j == i + 1 || nums[j] != nums[j - 1]) {
                            // 向左移动指针，直到 a+b+c 不大于 0
                            while (nums[i] + nums[j] + nums[k] > 0 && k > j) k--;
                            if (j == k) break;
                            if (nums[i] + nums[j] + nums[k] == 0) {
                                temp = new ArrayList<>();
                                temp.add(nums[i]);
                                temp.add(nums[j]);
                                temp.add(nums[k]);
                                result.add(temp);
                            }
                        }
                    }
                }
            }
            return result;
        }
    }

//runtime:24 ms
//memory:42.5 MB
